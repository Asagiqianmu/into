<style type="less" src="../styles/userregister.less"></style>

<template>
    <vive class="page">
        <view class="page-before" style="background-color:{{btncolor}}"></view>
        <view class="page-panel" >
            <view class="page-panel-bd">
                <view style="color:{{btncolor}}" class="head">用户注册</view>
                <view class="menu">
                    <view class="menu-tl">
                        <view style="color:{{btncolor}}">手机号:</view>
                        <input maxlength="11" bindblur="mobileInputEvent"  bindinput="telphone" class="menu-tl-in" type="number" placeholder="请输入手机号"></input>
                    </view>
                    <view>
                        <view style="color:{{btncolor}}">验证码:</view>
                        <view class="menu-vc">
                            <input maxlength="6"  bindinput="vercode" class="menu-vc-in" type="number"  placeholder="请输入验证码"></input>
                            <button value="获取验证" class="menu-vc-bt" style="color:white;background-color:{{btncolor}}" bindtap="getcode" disabled="{{buttonDisable}}">{{verifyCode}}</button>
                        </view>
                    </view>
                    <view class="menu-pca">
                        <view  class="menu-pca-ve">{{areaInfo}}</view>
                        <button class="menu-pca-bt" bindtap="selectDistrict" style="background-color:{{btncolor}}">选择城市</button>
                    </view>
                    <view class="menu-hd">
                        <view style="color:{{btncolor}}">小区名称:</view>
                        <input  bindinput="dname" class="menu-hd-in" type="text" placeholder="请输入小区名称"></input>
                    </view>
                    <view>
                        <view style="color:{{btncolor}}">住址:</view>
                        <view class="menu-add">
                            <input bindinput="dong" value="{{clear}}" type="text" maxlength="4"></input><span style="color:{{btncolor}}">栋</span>
                            <input bindinput="zuo" value="{{clear}}" type="text" maxlength="4"></input><span style="color:{{btncolor}}">座</span>
                            <input bindinput="fang" value="{{clear}}" type="text" maxlength="6"></input><span style="color:{{btncolor}}">房</span>
                        </view>
                    </view>
                    <view class="menu-err">{{warning}}</view>
                    <button class="menu-bt" style="background-color:{{btncolor}}" bindtap="submit">提交</button>

                </view>
            </view>
        </view>
        <view class="dialog-mask " style="z-index:11;visibility:{{addressMenuIsShow ? 'visible': 'hidden'}}" bindtap="hideCitySelected" ></view>
        <!--城市三级联动-->
        <!--使用动画时不能wx:if="{{city.length>0&&isVisible}}" ，不能hidden=''属性否则无动画效果-->
        <view class="picker-view" animation="{{animationAddressMenu}}" style="visibility:{{addressMenuIsShow ? 'visible':'hidden'}}">
            <view style="height:10% ;width:95%;margin-top:10px">
                <text catchtap="cityCancel">取消</text>
                <text style="float: right" catchtap="citySure">确定</text>
            </view>
            <!--"可以显示默认的城市，使用后级联选择城市反应很慢就不使用了-->
            <picker-view style="width: 100%; height: 300px;" bindchange="cityChange" value="{{value}}" wx:key="">
                <picker-view-column>
                    <view wx:for="{{provinces}}" class="picker-item">
                        {{item.name}}</view>
                </picker-view-column>
                <picker-view-column>
                    <view wx:for="{{citys}}" class="picker-item" wx:key="">
                        {{item.name}}</view>
                </picker-view-column>
                <picker-view-column>
                    <view wx:for="{{areas}}" class="picker-item" wx:key="">
                        {{item.name}}</view>
                </picker-view-column>
            </picker-view>
        </view>
    </vive>
</template>

<script>
    import wepy from 'wepy';
   // var address = require('../common/city.js');
    import address from '../common/city.js';
    var animation
    export default class Userregister extends wepy.page  {

        data = {
            btncolor: '#05a473',
            menuType: 0,
            begin: null,
            status: 1,
            end: null,
            isVisible: false,
            animationData: {},
            animationAddressMenu: {},
            addressMenuIsShow: false,
            value: [0, 0, 0],
            provinces: [],
            citys: [],
            areas: [],
            province: '',
            city: '',
            area: '',
            imgwidth:0,
            imgheight:0,
            telphone:'',
            vercode:'',
            dname:'',
            dong:'',
            zuo:'',
            fang:'',
            warning: '',
            clear:'',
            BareaInfo:'',
            ctime:'',
            buttonDisable:false,
            verifyCode1:'获取密码'
        };
        components = {};
        methods = {
           /* username(e){
                this.username = e.detail.value.replace(/[^A-Za-z0-9\u4e00-\u9fa5]+$/, '');
                return this.username;
            },*/
                telphone(e){
                    this.telphone = e.detail.value.replace(/[^0-9]/, '');
                    return this.telphone;
                },
                vercode(e){
                    this.vercode = e.detail.value.replace(/[^0-9]/, '');
                    return this.vercode;
                },
                dname(e){
                    this.dname = e.detail.value.replace(/[^A-Za-z0-9\u4e00-\u9fa5]+$/, '');
                    return this.dname;

                },
                dong(e){
                    this.dong = e.detail.value.replace(/[\W]/g,'');;
                    return this.dong;
                },
                zuo(e){
                    this.zuo = e.detail.value.replace(/[\W]/g,'');;
                    return this.zuo;
                },
                fang(e){
                    this.fang = e.detail.value.replace(/[\W]/g,'');;
                    return this.fang;
                },
        };
        onLoad(options) {
            // 初始化动画变量
            var _this = this;
            var animation = wx.createAnimation({
                duration: 500,
                transformOrigin: "50% 50%",
                timingFunction: 'ease',
            });
            this.animation = animation;
            // 默认联动显示北京
            let id = address.provinces[0].id;
            this.provinces= address.provinces;
            this.citys= address.citys[id];
            this.areas= address.areas[address.citys[id][0].id];

            this.setData({
                verifyCode:'获取验证'
            })

          //  console.log(this.data);
        };
        getcode() {
            let self = this;
            let tel = /^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\d{8}$/;
            let strtel = tel.test(this.telphone);
            if(!this.telphone){
                this.warning="手机号不能为空!";
                return;
            }if(!strtel){
                this.warning="手机号格式不正确!";
                return;
            }else {
                this.warning="";
            }
            wx.request({
                url: 'https://api.yingtong-pm.cn/v1/client/getnewcode',
                data: {
                    telphone: self.telphone,
                },
                method: 'POST',
                header: {
                    "Content-Type": "application/json"
                },
                success: function (res) {
                    let data = res.data;
                    console.log(data);
                    if (data.code == 200){
                        if(self.data.buttonDisable) return false;
                        var c = 60;
                        var intervalId = setInterval(function(){
                            c = c-1;
                            self.setData({
                                verifyCode:c + 's后重发',
                                buttonDisable:true,
                            })
                            if(c<=0){
                                clearInterval(intervalId);

                                self.setData({
                                    verifyCode:'获取验证',
                                    buttonDisable:false
                                })
                            }
                        },1000);
                        self.setData({
                            ctime:data.ctime
                        });
                        wx.showToast({
                            title: data.msg,
                            icon: 'success',
                            duration: 2000,
                        });

                    }else{
                        wx.showToast({
                            title: data.msg,
                            icon: 'success',
                            duration: 2000,
                        })
                    }
                }
            })
        }
/*        imageLoad(e){
            var _this=this;
            var $width=e.detail.width,  //获取图片真实宽度
                $height=e.detail.height,
                ratio=$width/$height;  //图片的真实宽高比例
            var viewWidth=500,      //设置图片显示宽度，
                viewHeight=500/ratio;  //计算的高度值
            _this.setData({
                imgwidth:viewWidth,
                imgheight:viewHeight
            })
        }*/

        submit(){
              let _this = this;
                  let tel = /^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\d{8}$/;
                  let strtel = tel.test(this.telphone);
              if(!this.telphone){
                  this.warning="手机号不能为空!";
                  return;
              }if(!strtel){
                  this.warning="手机号格式不正确!";
                  return;
              }else if(!this.vercode){
                  this.warning="验证码不能为空!";
                  return;
              }else if (!this.BareaInfo) {
                  this.warning = "请选择你所在的城市!";
                  return;
              }else if(!this.dname){
                  this.warning="小区名称不能为空!";
                  return;
              }else if(!this.dong||!this.zuo||!this.fang){
                  this.warning="住址不能为空!";
                  return;
              }else {
                  this.warning="";
              }
              wx.request({

                  url:'https://api.yingtong-pm.cn/v1/client/forgetpwd',
                  data:{
                      telphone:_this.telphone,
                      code:_this.vercode,
                      ctime:_this.ctime
                  },
                  method:'POST',
                  header: {
                      "Content-Type": "application/json"
                  },
                  success:function (res) {
                      let data = res.data;
                      let address = _this.dong+','+_this.zuo+','+_this.fang;
                      console.log(address);
                      wx.navigateTo({
                          url:"idcard-one?telphone="+_this.telphone+"&BareaInfo="+_this.BareaInfo+"&dname="+_this.dname+"&address="+address+"",
                      })
              /*        if(data.coda==200){//验证码正确
                          console.log('111');
                          wx.navigateTo({
                              url:"idcard-one?telphone="+_this.telphone+"&BareaInfo="+_this.BareaInfo+"&dname="+_this.dname+"&address="+address+"",
                          })
                        }else {
                          _this.setData({
                              warning:"验证码错误"
                          });
                        }*/
                  }
              })
        };
        /*三级联动-省-市-区*/
        showMenuTap(e) {
            //获取点击菜单的类型 1点击状态 2点击时间
            var menuType = e.currentTarget.dataset.type
            // 如果当前已经显示，再次点击时隐藏
            if (this.data.isVisible == true) {
                this.startAnimation(false, -200)
                return
            }
            this.setData({
                menuType: menuType
            })
            this.startAnimation(true, 0)
        };
        hideMenuTap(e) {
            this.startAnimation(false, -200)
        };
        // 执行动画
        startAnimation(isShow, offset) {
            var that = this
            var offsetTem
            if (offset == 0) {
                offsetTem = offset
            } else {
                offsetTem = offset + 'rpx'
            }
            this.animation.translateY(offset).step()
            this.setData({
                animationData: this.animation.export(),
                isVisible: isShow
            })
            console.log(that.data)
        };
        // 选择状态按钮
        selectState(e) {
            this.startAnimation(false, -200)
            var status = e.currentTarget.dataset.status
            this.setData({
                status: status
            })
            console.log(this.data)

        };
        // 日志选择
        bindDateChange(e) {
            console.log(e)
            if (e.currentTarget.dataset.type == 1) {
                this.setData({
                    begin: e.detail.value
                })
            } else if (e.currentTarget.dataset.type == 2) {
                this.setData({
                    end: e.detail.value
                })
            }
        };
        sureDateTap() {
            this.data.pageNo = 1
            this.startAnimation(false, -200)
        };
        /**
         * 生命周期函数--监听页面初次渲染完成
         */
        onReady() {

        };

        /**
         * 生命周期函数--监听页面显示
         */
        onShow() {

        };

        /**
         * 生命周期函数--监听页面隐藏
         */
        onHide() {

        };

        /**
         * 生命周期函数--监听页面卸载
         */
        onUnload() {

        };

        /**
         * 页面相关事件处理函数--监听用户下拉动作
         */
        onPullDownRefresh() {

        };

        /**
         * 页面上拉触底事件的处理函数
         */
        onReachBottom() {

        };

        /**
         * 用户点击右上角分享
         */
        onShareAppMessage() {

        };
        // 点击所在地区弹出选择框
        selectDistrict(e) {
            var that = this
            console.log('弹出选择框')
            if (that.data.addressMenuIsShow) {
                return
            }
            that.startAddressAnimation(true)
        };
        // 执行动画
        startAddressAnimation(isShow) {
            var that = this
            if (isShow) {
                that.animation.translateY(0 + 'vh').step()
            } else {
                that.animation.translateY(40 + 'vh').step()
            }
            that.setData({
                animationAddressMenu: that.animation.export(),
                addressMenuIsShow: isShow,
            })
        };
        // 点击地区选择取消按钮
        cityCancel(e) {
            this.startAddressAnimation(false)
        };
        // 点击地区选择确定按钮
        citySure(e) {
            var that = this
            var city = that.data.city
            var value = that.data.value
            that.startAddressAnimation(false)
            // 将选择的城市信息显示到输入框
            var areaInfo = that.data.provinces[value[0]].name + ',' + that.data.citys[value[1]].name + ',' + that.data.areas[value[2]].name;
            this.BareaInfo = areaInfo;
            that.setData({
                areaInfo: areaInfo,
            })
        };
        hideCitySelected(e) {
            this.startAddressAnimation(false)
        };
        // 处理省市县联动逻辑
        cityChange(e) {
            var value = e.detail.value
            var provinces = this.data.provinces
            var citys = this.data.citys
            var areas = this.data.areas
            var provinceNum = value[0]
            var cityNum = value[1]
            var countyNum = value[2]
            if (this.data.value[0] != provinceNum) {
                var id = provinces[provinceNum].id

                this.value= [provinceNum, 0, 0];
                this.citys= address.citys[id];
                this.areas= address.areas[address.citys[id][0].id];

            } else if (this.data.value[1] != cityNum) {
                var id = citys[cityNum].id

                this.value= [provinceNum, cityNum, 0];
                this.areas= address.areas[citys[cityNum].id];

            } else {

                this.value= [provinceNum, cityNum, countyNum];

            }
            console.log(this.data);

        };
        /*三级联动-省-市-区*/
    }

</script>